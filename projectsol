CREATE TABLE matches_2 (
match_id int,
city varchar,
date date,
player_of_match varchar,
venue varchar,
neutral_venue int,
team1 varchar, 
team2 varchar, 
toss_winner varchar, 
toss_decision varchar, 
winner varchar,
result_mode varchar, 
result_margin int,
eliminator varchar,
method_dl varchar,
umpire1 varchar, 
umpire2 varchar
);


CREATE TABLE deliveries1 (
match_id int, 
inning int, 
over int, 
ball int, 
batsman varchar, 
non_striker varchar, 
bowler varchar, 
batsman_runs int,
extra_runs int, 
total_runs int,
wicket_ball int,
dismissal_kind varchar,
player_dismissed varchar,
fielder varchar,
extras_type varchar,
batting_team varchar, 
bowling_team varchar
);



copy matches from 'G:\Data_for_final_project_-_IPL\Data for final project - IPL\IPL_matches.csv' CSV header ;

copy deliveries from 'G:\Data_for_final_project_-_IPL\Data for final project - IPL\IPL_Ball.csv' CSV header ;

select * from deliveries1 limit 20;

select * from matches_2 limit 20;

select * from matches where date = '02-05-2013';

select * from matches where result_mode = 'runs' and result_margin > 100;

select * from matches where result_mode ='tie' order by date desc;

select count (distinct city) from matches_2;

create table deliveries_v02 as select *, 
 CASE WHEN total_runs >= 4 then 'boundary' 
 WHEN total_runs = 0 THEN 'dot'
else 'other'
 END as ball_result 
 FROM deliveries1;
 
select ball_result, count (*) from deliveries_v02 group by ball_result;

select batting_team, count(*) from deliveries_v02 where ball_result = 'boundary' 
group by batting_team order by count desc;

select bowling_team, count(*) from deliveries_v02 where ball_result = 'dot' 
group by bowling_team order by count desc;

select dismissal_kind, count (*) from deliveries1 where dismissal_kind <> 'NA'
group by dismissal_kind 
order by count desc;

select bowler, sum(extra_runs) as total_extra_runs from deliveries1 group by bowler 
order by total_extra_runs desc limit 5;

create table deliveries_v03 AS SELECT a.*, b.venue, b.match_date from 
deliveries_v02 as a 
left join (select max(venue) as venue, max(date) as match_date, match_id from matches 
group by match_id) as b
on a.match_id = b.match_id;

select venue, sum(total_runs) as runs from deliveries_v03 group by venue order by runs 
desc;

select extract(year from match_date) as IPL_year, sum(total_runs) as runs 
from deliveries_v03 
where venue = 'Eden Gardens' group by IPL_year order by runs desc;

select distinct team1 from matches_2;
create table matches_corrected as select *, replace(team1, 'Rising Pune Supergiants', 'Rising Pune 
Supergiant') as team1_corr, replace(team2, 'Rising Pune Supergiants', 'Rising Pune Supergiant') as team2_corr from matches_2;

select distinct team1_corr from matches_corrected;

create table deliveries_v04 as select concat(match_id,'-',inning,'-',over,'-',ball) as ball_id, * from 
deliveries_v03;

select * from deliveries_v04 limit 20;
select count(distinct ball_id) from deliveries_v04;
select count(*) from deliveries_v04;

drop table deliveries_v05;
create table deliveries_v05 as select *, row_number() over (partition by ball_id) as r_num from 
deliveries_v04;

select count(*) from deliveries_v05;
select sum(r_num) from deliveries_v05;
select * from deliveries_v05 order by r_num limit 20;
select * from deliveries_v05 WHERE r_num=2;

SELECT * FROM deliveries_v05 WHERE ball_id in (select BALL_ID from deliveries_v05 WHERE 
r_num=2);
